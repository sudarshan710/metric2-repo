on:
  push:
    branches: [main]
  pull_request:
    branches: [main]
 
jobs:
  databricks-quality-check:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
 
      - name: Trigger Databricks Job
        id: run_databricks_job
        uses: databricks/run-notebook@v0
        with:
          databricks-host: ${{ secrets.DATABRICKS_HOST }}
          databricks-token: ${{ secrets.DATABRICKS_TOKEN }}
          workspace-notebook-path: /Workspace/Users/traininguser7@sudosu.ai/dequ
          existing-cluster-id: ${{ secrets.DATABRICKS_CLUSTER_ID }}

      - name: Get notebook output
        run: |
          RUN_ID=${{ steps.run_databricks_job.outputs.run-id }}
          OUTPUT=$(curl -s -X GET "$DATABRICKS_HOST/api/2.1/jobs/runs/get-output?run_id=$RUN_ID" \
            -H "Authorization: Bearer $DATABRICKS_TOKEN")
          echo "Notebook Output:"
          echo "$OUTPUT"
 
      - name: Download Deequ Report (if failed)
        if: failure()
        run: |
          # Optionally fetch report from DBFS to attach as artifact using databricks' CLI or REST API
          echo "Deequ failed â€” see DBFS report"